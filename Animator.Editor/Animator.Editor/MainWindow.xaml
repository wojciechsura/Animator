<f:RibbonWindow
    xmlns:f="urn:fluent-ribbon"
    x:Class="Animator.Editor.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:Animator.Editor.Resources;assembly=Animator.Editor.Resources"
    xmlns:ad="http://schemas.xceed.com/wpf/xaml/avalondock"    
    xmlns:local="clr-namespace:Animator.Editor"
    xmlns:controls="clr-namespace:Animator.Editor.Controls"
    xmlns:converters="clr-namespace:Animator.Editor.Converters"
    xmlns:vmd="clr-namespace:Animator.Editor.BusinessLogic.ViewModels.Document;assembly=Animator.Editor.BusinessLogic"
    xmlns:nav="clr-namespace:Animator.Editor.BusinessLogic.Models.Navigation;assembly=Animator.Editor.BusinessLogic"
    xmlns:wpf="clr-namespace:Animator.Editor.Wpf"
    xmlns:vm="clr-namespace:Animator.Editor.BusinessLogic.ViewModels.Document;assembly=Animator.Editor.BusinessLogic"
    xmlns:uit="clr-namespace:Animator.Editor.BusinessLogic.Types.UI;assembly=Animator.Editor.BusinessLogic"
    mc:Ignorable="d"
    Title="Animator.Editor" Height="450" Width="800" Closing="HandleWindowClosing"  UseLayoutRounding="True"
    Loaded="HandleLoaded">

    <f:RibbonWindow.Resources>
        
        <!-- Styles -->
        
        <Style TargetType="ButtonBase" x:Key="DocumentTabButtonStyle">
            <Style.Setters>
                <Setter Property="TextBlock.Foreground" Value="{Binding Path=(TextBlock.Foreground), RelativeSource={RelativeSource AncestorType=StackPanel}}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ButtonBase">
                            <Border x:Name="ContentBorder" TextBlock.Foreground="{TemplateBinding Foreground}"
                                        Background="{TemplateBinding Background}">
                                <ContentPresenter x:Name="cpContent" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.Setters>
                                        <Setter TargetName="cpContent" Property="Margin">
                                            <Setter.Value>
                                                <Thickness Top="3" Left="3" Right="1" Bottom="1" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger.Setters>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="TextBlock.Foreground" Value="{StaticResource DocumentButtonHoverForegroundBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="RepeatButton" x:Key="DocumentTabScrollButtonStyle">
            <Style.Setters>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RepeatButton">
                            <Border x:Name="ContentBorder" TextBlock.Foreground="{StaticResource TabScrollButtonForegroundBrush}"
                                        Background="{TemplateBinding Background}">
                                <ContentPresenter x:Name="cpContent" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.Setters>
                                        <Setter TargetName="cpContent" Property="Margin">
                                            <Setter.Value>
                                                <Thickness Top="3" Left="3" Right="1" Bottom="1" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger.Setters>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ContentBorder" Property="TextElement.Foreground" Value="{StaticResource TabScrollButtonForegroundBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>

        <Style x:Key="DocumentTabItem" TargetType="TabItem">
            <Style.Setters>
                <Setter Property="Background" Value="{StaticResource NormalTabBackgroundBrush}" />
                <Setter Property="TextBlock.Foreground" Value="{StaticResource NormalTabForegroundBrush}" />
                <Setter Property="controls:DocumentTabHeader.Pinned" Value="{Binding IsPinned}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border x:Name="TabBorder" BorderThickness="0,0,0,2" BorderBrush="{Binding Path=Background, RelativeSource={RelativeSource Mode=Self}}" Background="{TemplateBinding Background}" 
                                        TextBlock.Foreground="{TemplateBinding Foreground}">
                                <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Center" VerticalAlignment="Center" ContentSource="Header" Margin="6,2,6,0" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.Setters>
                        <Setter Property="Background" Value="{StaticResource HoverTabBackgroundBrush}" />
                        <Setter Property="TextBlock.Foreground" Value="{StaticResource HoverTabForegroundBrush}" />
                    </Trigger.Setters>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Trigger.Setters>
                        <Setter Property="Background" Value="{StaticResource SelectedDocumentTabBackgroundBrush}" />
                        <Setter Property="TextBlock.Foreground" Value="{StaticResource SelectedDocumentTabForegroundBrush}" />
                    </Trigger.Setters>
                </Trigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                        <Condition Binding="{Binding IsActiveDocumentTab, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:TabControlExt}}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="{StaticResource SelectedInactiveDocumentTabBackgroundBrush}" />
                        <Setter Property="TextBlock.Foreground" Value="{StaticResource SelectedInactiveDocumentTabForegroundBrush}" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DocumentTabControlStyle" TargetType="controls:TabControlExt">
            <Style.Setters>

                <!-- Template for the whole tab control -->

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type controls:TabControlExt}">
                            <Grid x:Name="Grid" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <Border Grid.Row="1" Grid.Column="0" x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" 
                                            BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                    <ContentPresenter Margin="{TemplateBinding Padding}" x:Name="PART_SelectedContentHost" 
                                                          Content="{TemplateBinding SelectedContent}" ContentTemplate="{TemplateBinding SelectedContentTemplate}" 
                                                          ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}" ContentSource="SelectedContent"/>
                                </Border>

                                <ScrollViewer x:Name="HeaderPanel" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" 
                                                  VerticalAlignment="Stretch" Margin="0" HorizontalScrollBarVisibility="Auto" 
                                                  VerticalScrollBarVisibility="Disabled" Focusable="False"
                                                  wpf:MouseEvents.DirectMouseDoubleClickCommand="{TemplateBinding HeaderDoubleClickCommand}"
                                                  wpf:ParentData.ParentItemsSource="{TemplateBinding ItemsSource}">
                                    <ScrollViewer.Style>
                                        <Style TargetType="{x:Type ScrollViewer}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ScrollViewer">
                                                        <Grid Margin="0" x:Name="HeaderPanel">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <ScrollContentPresenter Grid.Column="0" Content="{TemplateBinding ScrollViewer.Content}" />
                                                            <StackPanel Orientation="Horizontal" Grid.Column="1" VerticalAlignment="Bottom"
                                                                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">
                                                                <RepeatButton Content="3" FontFamily="Marlett" FontSize="12" Padding="2" MinHeight="24"
                                                                                      Command="ScrollBar.LineLeftCommand" Style="{StaticResource DocumentTabScrollButtonStyle}"/>
                                                                <RepeatButton Content="4" FontFamily="Marlett" FontSize="12" Padding="2" MinHeight="24"
                                                                                  Command="ScrollBar.LineRightCommand" Style="{StaticResource DocumentTabScrollButtonStyle}"/>
                                                            </StackPanel>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ScrollViewer.Style>
                                    <controls:DocumentTabHeader IsItemsHost="True" Background="{x:Null}" />
                                </ScrollViewer>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <!-- Template for doument tab header -->

                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <StackPanel x:Name="spDocTabItemRoot" Orientation="Horizontal">
                                <Image Width="16" Height="16" Source="{Binding Icon}"/>
                                <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" MaxWidth="200" Margin="2"/>
                                <TextBlock Text="•" Margin="2" Visibility="{Binding Changed, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                <ToggleButton Width="16" Height="16" FontSize="10" Style="{StaticResource DocumentTabButtonStyle}" IsChecked="{Binding IsPinned, Mode=TwoWay}"
                                                  VerticalAlignment="Center">
                                    <Grid>
                                        <!-- Pin on icon -->
                                        <Path Width="8" Height="8" Fill="{Binding Path=(TextBlock.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                                Visibility="{Binding IsPinned, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <Path.Data>
                                                <PathGeometry Figures="M 1 0 L 1 4 L 0 4 L 0 5 L 3 5 L 3 8 L 4 8 L 4 5 L 7 5 L 7 4 L 6 4 L 6 0 L 1 0 z M 2 1 L 4 1 L 4 4 L 2 4 L 2 1 z " FillRule="NonZero"/>
                                            </Path.Data>
                                        </Path>

                                        <!-- Pin off icon -->
                                        <Path Width="8" Height="8" Fill="{Binding Path=(TextBlock.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                                Visibility="{Binding IsPinned, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                            <Path.Data>
                                                <PathGeometry Figures="M 3 0 L 3 3 L 0 3 L 0 4 L 3 4 L 3 7 L 4 7 L 4 6 L 8 6 L 8 1 L 4 1 L 4 0 L 3 0 z M 4 2 L 7 2 L 7 4 L 4 4 L 4 2 z " FillRule="NonZero"/>
                                            </Path.Data>
                                        </Path>
                                    </Grid>
                                </ToggleButton>
                                <Button Width="16" Height="16" Command="{Binding CloseCommand}" Style="{StaticResource DocumentTabButtonStyle}"
                                            VerticalAlignment="Center">
                                    <Path Fill="{Binding Path=(TextBlock.Foreground), RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                        <Path.Data>
                                            <PathGeometry Figures="M 0 1 L 4 5 L 0 9 L 2 9 L 5 6 L 8 9 L 10 9 L 6 5 L 10 1 L 8 1 L 5 4 L 2 1 Z" />
                                        </Path.Data>
                                    </Path>
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>

        <Style x:Key="RootPanel" TargetType="Grid">
            <Style.Setters>
                <Setter Property="Background" Value="{StaticResource FormBackgroundBrush}" />
            </Style.Setters>
        </Style>

        <!-- Template selectors -->

        <wpf:DocumentTemplateSelector x:Key="DocumentTemplateSelector" />
    </f:RibbonWindow.Resources>

    <f:RibbonWindow.InputBindings>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{Binding NewCommand}" />
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding OpenCommand}" />
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding SaveCommand}" />
        <KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding CopyCommand}" />
        <KeyBinding Key="V" Modifiers="Ctrl" Command="{Binding PasteCommand}" />
        <KeyBinding Key="X" Modifiers="Ctrl" Command="{Binding CutCommand}" />
        <KeyBinding Key="Z" Modifiers="Ctrl" Command="{Binding UndoCommand}" />
        <KeyBinding Key="Z" Modifiers="Ctrl+Shift" Command="{Binding RedoCommand}" />
        <KeyBinding Key="F" Modifiers="Ctrl" Command="{Binding SearchCommand}" />
        <KeyBinding Key="H" Modifiers="Ctrl" Command="{Binding ReplaceCommand}" />
        <KeyBinding Key="L" Modifiers="Ctrl" Command="{Binding FindNextCommand}" />
        <KeyBinding Key="F3" Command="{Binding FindNextCommand}" />
        <KeyBinding Key="P" Modifiers="Ctrl" Command="{Binding NavigateCommand}" />
    </f:RibbonWindow.InputBindings>

    <Grid Style="{StaticResource RootPanel}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <f:Ribbon Grid.Row="0" Focusable="False" FocusManager.IsFocusScope="True">
            <f:Ribbon.Menu>
                <f:ApplicationMenu>

                </f:ApplicationMenu>
            </f:Ribbon.Menu>

            <!-- Home tab -->

            <f:RibbonTabItem Header="{x:Static p:Strings.Ribbon_Tab_Home}"
                             ReduceOrder="grHomeEdit, grHomeFile">

                <!-- File -->

                <f:RibbonGroupBox x:Name="grHomeFile" Header="{x:Static p:Strings.Ribbon_Group_File}">
                    <f:Button Header="{x:Static p:Strings.Ribbon_File_Open}" Command="{Binding OpenCommand}" SizeDefinition="Large" 
                              LargeIcon="pack://application:,,,/Animator.Editor;component/Resources/Images/Open32.png"
                              Icon="pack://application:,,,/Animator.Editor;component/Resources/Images/Open16.png"/>
                    <f:Button Header="{x:Static p:Strings.Ribbon_File_New}" Command="{Binding NewCommand}" SizeDefinition="Middle, Small" 
                              LargeIcon="pack://application:,,,/Animator.Editor;component/Resources/Images/New32.png"
                              Icon="pack://application:,,,/Animator.Editor;component/Resources/Images/New16.png"/>
                    <f:Button Header="{x:Static p:Strings.Ribbon_File_Save}" Command="{Binding SaveCommand}" SizeDefinition="Middle, Small"
                              LargeIcon="pack://application:,,,/Animator.Editor;component/Resources/Images/Save32.png"
                              Icon="pack://application:,,,/Animator.Editor;component/Resources/Images/Save16.png"/>
                    <f:Button Header="{x:Static p:Strings.Ribbon_File_SaveAs}" Command="{Binding SaveAsCommand}" SizeDefinition="Middle, Small"
                              LargeIcon="pack://application:,,,/Animator.Editor;component/Resources/Images/Save32.png"
                              Icon="pack://application:,,,/Animator.Editor;component/Resources/Images/Save16.png"/>
                </f:RibbonGroupBox>

                <!-- Edit -->

                <f:RibbonGroupBox x:Name="grHomeEdit" Header="{x:Static p:Strings.Ribbon_Group_Edit}">
                    <f:Button Header="{x:Static p:Strings.Ribbon_Edit_Paste}" Command="{Binding PasteCommand}" SizeDefinition="Large" 
                              LargeIcon="pack://application:,,,/Animator.Editor;component/Resources/Images/Paste32.png"
                              Icon="pack://application:,,,/Animator.Editor;component/Resources/Images/Paste16.png"/>

                    <f:RibbonToolBar>
                        <f:RibbonToolBar.LayoutDefinitions>

                            <f:RibbonToolBarLayoutDefinition Size="Large">
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bEditUndo" Size="Small" />
                                    <f:RibbonToolBarControlDefinition Target="bEditRedo" Size="Small" />
                                </f:RibbonToolBarRow>
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bEditCopy" Size="Middle" />
                                </f:RibbonToolBarRow>
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bEditCut" Size="Middle" />
                                </f:RibbonToolBarRow>
                            </f:RibbonToolBarLayoutDefinition>

                            <f:RibbonToolBarLayoutDefinition Size="Middle">
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bEditUndo" Size="Small" />
                                    <f:RibbonToolBarControlDefinition Target="bEditRedo" Size="Small" />
                                </f:RibbonToolBarRow>
                                <f:RibbonToolBarRow>
                                    <f:RibbonToolBarControlDefinition Target="bEditCopy" Size="Small" />
                                    <f:RibbonToolBarControlDefinition Target="bEditCut" Size="Small" />
                                </f:RibbonToolBarRow>
                            </f:RibbonToolBarLayoutDefinition>

                        </f:RibbonToolBar.LayoutDefinitions>

                        <f:Button x:Name="bEditUndo" Header="{x:Static p:Strings.Ribbon_Edit_Undo}" Command="{Binding UndoCommand}" 
                                  LargeIcon="pack://application:,,,/Animator.Editor;component/Resources/Images/Undo32.png"
                              Icon="pack://application:,,,/Animator.Editor;component/Resources/Images/Undo16.png"/>
                        <f:Button x:Name="bEditRedo" Header="{x:Static p:Strings.Ribbon_Edit_Redo}" Command="{Binding RedoCommand}" 
                                  LargeIcon="pack://application:,,,/Animator.Editor;component/Resources/Images/Redo32.png"
                              Icon="pack://application:,,,/Animator.Editor;component/Resources/Images/Redo16.png"/>
                        <f:Button x:Name="bEditCopy" Header="{x:Static p:Strings.Ribbon_Edit_Copy}" Command="{Binding CopyCommand}" 
                                  LargeIcon="pack://application:,,,/Animator.Editor;component/Resources/Images/Copy32.png"
                              Icon="pack://application:,,,/Animator.Editor;component/Resources/Images/Copy16.png"/>
                        <f:Button x:Name="bEditCut" Header="{x:Static p:Strings.Ribbon_Edit_Cut}" Command="{Binding CutCommand}" 
                                  LargeIcon="pack://application:,,,/Animator.Editor;component/Resources/Images/Cut32.png"
                              Icon="pack://application:,,,/Animator.Editor;component/Resources/Images/Cut16.png"/>

                    </f:RibbonToolBar>

                </f:RibbonGroupBox>

                <!-- Search -->

                <f:RibbonGroupBox x:Name="grSearch" Header="{x:Static p:Strings.Ribbon_Group_Search}">
                    <f:Button Header="{x:Static p:Strings.Ribbon_Search_Search}" Command="{Binding SearchCommand}" SizeDefinition="Large"
                              LargeIcon="pack://application:,,,/Animator.Editor;component/Resources/Images/Search32.png"
                              Icon="pack://application:,,,/Animator.Editor;component/Resources/Images/Search16.png"/>
                    <f:Button Header="{x:Static p:Strings.Ribbon_Search_Replace}" Command="{Binding ReplaceCommand}" SizeDefinition="Middle"
                              LargeIcon="pack://application:,,,/Animator.Editor;component/Resources/Images/Replace32.png"
                              Icon="pack://application:,,,/Animator.Editor;component/Resources/Images/Replace16.png"/>
                    <f:Button Header="{x:Static p:Strings.Ribbon_Search_FindNext}" Command="{Binding FindNextCommand}" SizeDefinition="Middle"
                              LargeIcon="pack://application:,,,/Animator.Editor;component/Resources/Images/FindNext32.png"
                              Icon="pack://application:,,,/Animator.Editor;component/Resources/Images/FindNext16.png"/>
                </f:RibbonGroupBox>

                <!-- Navigation -->

                <f:RibbonGroupBox x:Name="grNavigation" Header="{x:Static p:Strings.Ribbon_Group_Navigation}">
                    <f:Button Header="{x:Static p:Strings.Ribbon_Navigation_Navigate}" Command="{Binding NavigateCommand}" SizeDefinition="Large" 
                              LargeIcon="pack://application:,,,/Animator.Editor;component/Resources/Images/Navigation32.png"
                              Icon="pack://application:,,,/Animator.Editor;component/Resources/Images/Navigation16.png" />

                </f:RibbonGroupBox>

            </f:RibbonTabItem>

            <!-- View tab -->

            <f:RibbonTabItem Header="{x:Static p:Strings.Ribbon_Tab_View}">

                <!-- Editor -->

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_Group_Editor}">

                    <f:CheckBox Header="{x:Static p:Strings.Ribbon_Editor_WordWrap}" IsChecked="{Binding WordWrap, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <f:CheckBox Header="{x:Static p:Strings.Ribbon_Editor_ShowLineNumbers}" IsChecked="{Binding LineNumbers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                </f:RibbonGroupBox>

                <!-- Syntax highlighting -->

                <f:RibbonGroupBox Header="{x:Static p:Strings.Ribbon_View_SyntaxHighlighting}">

                    <f:InRibbonGallery ItemsSource="{Binding Highlightings}" 
                                       ItemWidth="80"
                                       ItemHeight="58"
                                       MinItemsInRow="2" 
                                       MaxItemsInRow="2" 
                                       SelectedItem="{Binding ActiveDocument.Highlighting}"
                                       IsEnabled="{Binding ActiveDocument, Converter={StaticResource NullToBoolConverter}}"
                                       GroupBy="Initial">
                        <f:InRibbonGallery.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical">
                                    <Image Width="32" Height="32" Source="{Binding Icon}"/>
                                    <Label Content="{Binding Name}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"/>
                                </StackPanel>
                            </DataTemplate>
                        </f:InRibbonGallery.ItemTemplate>
                    </f:InRibbonGallery>

                </f:RibbonGroupBox>

            </f:RibbonTabItem>

        </f:Ribbon>

        <!-- Tabs -->

        <controls:TabControlExt Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                    ItemsSource="{Binding Documents}" SelectedItem="{Binding ActiveDocument}"
                    Margin="{StaticResource HalfMargin}" Style="{StaticResource DocumentTabControlStyle}"
                    ItemContainerStyle="{StaticResource DocumentTabItem}" 
                    ContentTemplateSelector="{StaticResource DocumentTemplateSelector}" 
                    HeaderDoubleClickCommand="{Binding NewCommand}" />

        <!-- Navigation popup -->

        <Popup x:Name="pNavigation" Grid.Row="1" Margin="0,40,0,0" StaysOpen="False"
               Placement="Center" AllowsTransparency="True" PreviewKeyDown="HandleNavigationPreviewKeyDown" FocusManager.IsFocusScope="True">
            <StackPanel Orientation="Vertical" Background="#80000000">
                <StackPanel Orientation="Horizontal">
                    <Image Source="pack://application:,,,/Animator.Editor;component/Resources/Images/Navigation16.png" 
                           Margin="4,4,0,4"/>
                    <Label Content="{x:Static p:Strings.NavigationPopup_Header}" Foreground="White"/>
                </StackPanel>

                <Rectangle HorizontalAlignment="Stretch" Height="1" Fill="White" />

                <TextBox x:Name="tbNavigation" Width="300" Margin="10" Text="{Binding NavigationText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         TextChanged="HandleNavigationTextboxTextChanged" />

                <ListBox x:Name="lbNavigation" Width="300" Height="200" Margin="10,0,10,10" ItemsSource="{Binding NavigationItems}"
                         SelectedItem="{Binding SelectedNavigationItem}" Focusable="False" MouseDoubleClick="HandleNavigationListMouseDoubleClick">
                    <ListBox.Resources>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Background" Value="Transparent"></Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border Name="SelectionBorder" Background="Transparent" CornerRadius="1">
                                            <ContentPresenter />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Trigger.Setters>
                                                    <Setter Property="Foreground" Value="{x:Static SystemColors.HighlightTextBrush}" />
                                                    <Setter TargetName="SelectionBorder" Property="Background" Value="{x:Static SystemColors.HighlightBrush}" />
                                                </Trigger.Setters>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.Resources>
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type nav:BaseNavigationModel}">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16" Height="16" Margin="4" Source="{Binding Icon}" Opacity="{Binding Enabled, Converter={StaticResource EnabledToOpactityConverter}}" />
                                <TextBlock x:Name="lNavItem" Text="{Binding Title}" Margin="4" Opacity="{Binding Enabled, Converter={StaticResource EnabledToOpactityConverter}}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
        </Popup>

    </Grid>
</f:RibbonWindow>
