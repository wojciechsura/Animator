<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Animator.Engine</name>
    </assembly>
    <members>
        <member name="M:Animator.Engine.Animation.Maths.EasingFunctionRepository.SpeedUpToSlowDown(System.Func{System.Single,System.Single})">
            <remarks>Assumes, that func is continuous, func(0) = 0 and func(1) = 1.</remarks>
        </member>
        <member name="M:Animator.Engine.Animation.Maths.EasingFunctionRepository.SpeedUpToBoth(System.Func{System.Single,System.Single})">
            <remarks>Assumes, that func is continuous, func(0) = 0 and func(1) = 1.</remarks>
        </member>
        <member name="M:Animator.Engine.Animation.Maths.EasingFunctionRepository.SpeedUpToReverseBoth(System.Func{System.Single,System.Single})">
            <remarks>Assumes, that func is continuous, func(0) = 0 and func(1) = 1.</remarks>
        </member>
        <member name="T:Animator.Engine.Elements.AbsoluteArcPathElement">
            <summary>
            Represents a path part, which is drawn as an elliptical arc.
            First point of the arc equals to the last point of previous
            path element.
            Endpoint of the arc is expressed in absolute coordinates.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AbsoluteArcPathElement.RX">
            <summary>
            X radius of the ellipse, from which the arc is built.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AbsoluteArcPathElement.RY">
            <summary>
            Y radius of the ellipse, from which the arc is built.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AbsoluteArcPathElement.Angle">
            <summary>
            Angle of the arc.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AbsoluteArcPathElement.LargeArcFlag">
            <summary>
            Determines, whether arc should follow the larger path or smaller one.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AbsoluteArcPathElement.SweepFlag">
            <summary>
            Determines, whether arc will be drawn positive-angle or negative-angle.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AbsoluteArcPathElement.EndPoint">
            <summary>
            End point of the arc
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.AbsoluteCubicBezierPathElement">
            <summary>
            Represents a path part, which is drawn as a cubic Bezier curve.
            First point of the curve equals to the last point of previous
            path element.
            All points are expressed in absolute coordinates.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AbsoluteCubicBezierPathElement.ControlPoint1">
            <summary>
            First control point of the curve.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AbsoluteCubicBezierPathElement.ControlPoint2">
            <summary>
            Second control point of the curve.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AbsoluteCubicBezierPathElement.EndPoint">
            <summary>
            End point of the curve.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.AbsoluteCubicShorthandBezierPathElement">
            <summary>
            Represents a path part, which is drawn as a cubic Bezier curve.
            First point of the curve equals to the last point of previous
            path element. First control point is deduced from the previous
            path element as a mirror of its last control point against its
            endpoint.
            All points are expressed in absolute coordinates.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AbsoluteCubicShorthandBezierPathElement.ControlPoint2">
            <summary>
            Second control point of the curve.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AbsoluteCubicShorthandBezierPathElement.EndPoint">
            <summary>
            End point of the curve.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.AbsoluteHorizontalLinePathElement">
            <summary>
            Represents a path part, which is drawn as a horizontal line.
            All points are expressed in absolute coordinates.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AbsoluteHorizontalLinePathElement.X">
            <summary>
            X-coordinate of the end point. Y-coordinate equals to
            the end point's of the previous path element.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.AbsoluteLinePathElement">
            <summary>
            Represents a path part, which is drawn as a line.
            All points are expressed in absolute coordinates.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AbsoluteLinePathElement.EndPoint">
            <summary>
            End point of the line.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.AbsoluteMovePathElement">
            <summary>
            Begins a new path in specified absolute coordinates
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AbsoluteMovePathElement.EndPoint">
            <summary>
            Coordinates at which new path should begin.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.AbsoluteQuadraticBezierPathElement">
            <summary>
            Represents a path part, which is drawn as a quadratic Bezier curve.
            First point of the curve equals to the last point of previous
            path element.
            All points are expressed in absolute coordinates.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AbsoluteQuadraticBezierPathElement.ControlPoint">
            <summary>
            Control point of the curve.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AbsoluteQuadraticBezierPathElement.EndPoint">
            <summary>
            End point of the curve.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.AbsoluteQuadraticShorthandBezierPathElement">
            <summary>
            Represents a path part, which is drawn as a quadratic Bezier curve.
            Start point of the curve equals to the last point of previous
            path element. The control point is deduced from the previous
            path element as a mirror of its last control point against its
            endpoint.
            End point is expressed in absolute coordinates.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AbsoluteQuadraticShorthandBezierPathElement.EndPoint">
            <summary>
            End point of the curve.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.AbsoluteVerticalLinePathElement">
            <summary>
            Represents a path part, which is drawn as a vertical line.
            All points are expressed in absolute coordinates.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AbsoluteVerticalLinePathElement.Y">
            <summary>
            Y-coordinate of the end point. X-coordinate equals to
            the end point's of the previous path element.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.AnimateBool">
            <summary>
            Allows applying an animation to a bool property of some
            object. It is meant to be used only if you want to apply
            single animation per whole scene. Otherwise, use Storyboard
            and BoolKeyframe to define the whole animation.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimateBool.From">
            <summary>
            Initial value of the property when animation starts (at StartTime)
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimateBool.To">
            <summary>
            Final value of the property when animation ends (at EndTime)
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.AnimateColor">
            Allows applying an animation to a float property of some
            object. It is meant to be used only if you want to apply
            single animation per whole scene. Otherwise, use Storyboard
            and ColorKeyframe to define the whole animation.
        </member>
        <member name="P:Animator.Engine.Elements.AnimateColor.From">
            <summary>
            Initial color
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimateColor.To">
            <summary>
            Final color
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.AnimateFloat">
            <summary>
            Allows applying an animation to a float property of some
            object. It is meant to be used only if you want to apply
            single animation per whole scene. Otherwise, use Storyboard
            and FloatKeyframe to define the whole animation.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimateFloat.From">
            <summary>
            Initial value of the property when animation starts (at StartTime)
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimateFloat.To">
            <summary>
            Final value of the property when animation ends (at EndTime)
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.AnimateInt">
            <summary>
            Allows applying an animation to an int property of some
            object. It is meant to be used only if you want to apply
            single animation per whole scene. Otherwise, use Storyboard
            and IntKeyframe to define the whole animation.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimateInt.From">
            <summary>
            Initial value of the property when animation starts (at StartTime)
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimateInt.To">
            <summary>
            Final value of the property when animation ends (at EndTime)
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.AnimateNumericPropertyInTime">
            <summary>
            Base class for all property animators, which are
            modifying a numeric property (ie. int, float, PointF, etc.)
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimateNumericPropertyInTime.EasingFunction">
            <summary>
            Defines easing function used for animation. The role of
            easing function is to define, how value should change
            between previous and current keyframe. Possible
            easing functions include the following:
            
            <ul>
                <li>Linear</li>
                <li>SwitchOnStart</li>
                <li>SwitchInTheMiddle</li>
                <li>SwitchOnEnd</li>
                <li>SineSpeedUp</li>
                <li>SineSlowDown</li>
                <li>SineBoth</li>
                <li>QuadSpeedUp</li>
                <li>QuadSlowDown</li>
                <li>QuadBoth</li>
                <li>CubicSpeedUp</li>
                <li>CubicSlowDown</li>
                <li>CubicBoth</li>
                <li>QuartSpeedUp</li>
                <li>QuartSlowDown</li>
                <li>QuartBoth</li>
                <li>BackSpeedUp</li>
                <li>BackSlowDown</li>
                <li>BackBoth</li>
            </ul>
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.AnimatePoint">
            <summary>
            Allows applying an animation to an PointF property of some
            object. It is meant to be used only if you want to apply
            single animation per whole scene. Otherwise, use Storyboard
            and PointKeyframe to define the whole animation.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimatePoint.From">
            <summary>
            Initial value of the property when animation starts (at StartTime)
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimatePoint.To">
            <summary>
            Final value of the property when animation ends (at EndTime)
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.AnimateProperty">
            <summary>
            Base class for all animators, which operates on object's
            properties.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimateProperty.PropertyRef">
            <summary>
            Reference to a property, relative to object owning this animator.
            Subsequent elements must be separated by dots. You may call elements
            from collections as well, as long as they have their Name property
            set and it is unique in this collection.
            </summary>
            <example>
            <code>PropertyRef="MyRectangle.Pen.Color"</code>
            </example>
        </member>
        <member name="T:Animator.Engine.Elements.AnimatePropertyInTime">
            <summary>
            Base class for all property animator, which apply
            animation to a property in specific period of time.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimatePropertyInTime.StartTime">
            <summary>
            Time, when animation should be started.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimatePropertyInTime.EndTime">
            <summary>
            Time, when animation should finish.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.AnimateWithExpression">
            <summary>
            Allows evaluating animated value of an property basing on a mathematical expression.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimateWithExpression.Expression">
            <summary>
            Expression for the property.
            
            You may use the following pre-defined values:
            
            <ul>
            <li><strong>StartTime</strong> - value of StartTime property expressed in milliseconds (1/1000 of a second)</li>
            <li><strong>EndTime</strong> - value of EndTime property expressed in milliseconds</li>
            <li><strong>CurrentTime</strong> - time of current frame expressed in milliseconds</li>
            <li><strong>EasedFactor</strong> - value ranging from 0 (when CurrentTime = StartTime) to 1 (when CurrentTime = EndTime)
            with easing function applied.</li>
            </ul>
                
            In addition, you can reach value of any named element's property with the simple
            notation.
            </summary>
            <example>
            <code><pre>Expression="Rect.Position + [10,10] * EasedFactor"</pre></code>
            </example>
        </member>
        <member name="T:Animator.Engine.Elements.Animation">
            <summary>
            This is an abstract class serving as a base class for all animations.
            An animation is an object, which animates properties of elements on
            the scene.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.AnimationGroup">
            <summary>
            Allows grouping a couple of animators, so that you don't have to specify
            various properties multiple times. CommonAnimations itself does nothing,
            but values of its properties are inherited by animators placed inside.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimationGroup.PropertyRef">
            <summary>
            Reference to a property, relative to object owning this animator.
            Subsequent elements must be separated by dots. You may call elements
            from collections as well, as long as they have their Name property
            set and it is unique in this collection.
            </summary>
            <example>
            <code>PropertyRef="MyRectangle.Pen.Color"</code>
            </example>
        </member>
        <member name="P:Animator.Engine.Elements.AnimationGroup.StartTime">
            <summary>
            Defines time since start of scene, when value of
            a property should start being changed.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimationGroup.EndTime">
            <summary>
            Defines time since start of scene, when value of
            a property reaches its final value.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimationGroup.EasingFunction">
            <summary>
            Defines easing function used for animation. The role of
            easing function is to define, how value should change
            between previous and current keyframe. Possible
            easing functions include the following:
            
            <ul>
                <li>Linear</li>
                <li>SwitchOnStart</li>
                <li>SwitchInTheMiddle</li>
                <li>SwitchOnEnd</li>
                <li>SineSpeedUp</li>
                <li>SineSlowDown</li>
                <li>SineBoth</li>
                <li>QuadSpeedUp</li>
                <li>QuadSlowDown</li>
                <li>QuadBoth</li>
                <li>CubicSpeedUp</li>
                <li>CubicSlowDown</li>
                <li>CubicBoth</li>
                <li>QuartSpeedUp</li>
                <li>QuartSlowDown</li>
                <li>QuartBoth</li>
                <li>BackSpeedUp</li>
                <li>BackSlowDown</li>
                <li>BackBoth</li>
            </ul>
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimationGroup.Duration">
            <summary>
            A short-hand property, which allows you to specify
            animation's duration instead of its end time.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimationGroup.Animations">
            <summary>
            Defines a list of grouped animations.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.AnimationGroup.TimeOffset">
            <summary>
            Offsets all inner animations by a specific duration. Negative values makes them happen earlier,
            positive values - later.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.ArcPathElement">
            <summary>
            This is a base class for all arc path elements.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.BlurEffect">
            <summary>
            Adds a simple box blur to a visual.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.BlurEffect.Radius">
            <summary>
            Radius of the blur, in pixels.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.BoolKeyframe">
            <summary>
            A keyframe for a property of type float.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.BoolKeyframe.Value">
            <summary>
            Value of the keyframe.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.Brush">
            <summary>
            Base class for all brushes. A brush is an object, which
            defines fill of a shape. If you need a simple, mono-color
            fill, use SolidBrush.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.Circle">
            <summary>
            Draws a circle on a scene.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Circle.Center">
            <summary>
            Center point of the circle.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Circle.Radius">
            <summary>
            Radius of the circle.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.CloseShapePathElement">
            <summary>
            Informs, that the shape defined by a series of path elements
            ends here. If needed, path is closed with a line leading to
            its start.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.ColorKeyframe">
            <summary>
            A keyframe for a property of type Color.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.CubicBezierBasedPathElement">
            <summary>
            Base class for all path elements, which are interpolated
            by a cubic Bezier curve
            </summary>
        </member>
        <member name="M:Animator.Engine.Elements.CubicBezierBasedPathElement.BuildBezier(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Builds cubic Bezier curve equivalent for current path fragment.
            </summary>
        </member>
        <member name="M:Animator.Engine.Elements.CubicBezierBasedPathElement.GetBezier(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Gets cubic Bezier curve equivalent for current path fragment.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.DropShadowEffect">
            <summary>
            An effect, which adds a shadow to a visual.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.DropShadowEffect.Color">
            <summary>
            Color of the shadow.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.DropShadowEffect.DX">
            <summary>
            Horizontal offset of the shadow.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.DropShadowEffect.DY">
            <summary>
            Vertical offset of the shadow.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.DropShadowEffect.Radius">
            <summary>
            Blur radius of the shadow.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.Effect">
            <summary>
            This class serves as an abstract base class for all
            effects, which may be applied to rendered elements.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.Ellipse">
            <summary>
            Draws an ellipse on the scene.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Ellipse.TopLeft">
            <summary>
            Defines top and left coordinates of the rectangle
            circumscribing the desired ellipse.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Ellipse.BottomRight">
            <summary>
            Defines bottom and right coordinates of the rectangle
            circumscribing the desired ellipse.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.FloatKeyframe">
            <summary>
            A keyframe for a property of type float.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.FloatKeyframe.Value">
            <summary>
            Value of the keyframe.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.GaussianBlurEffect">
            <summary>
            Adds a nice, Gaussian blur to a visual.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.GaussianBlurEffect.Radius">
            <summary>
            Radius of the blur.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.IntKeyframe">
            <summary>
            A keyframe for a property of type int.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.IntKeyframe.Value">
            <summary>
            Value of the keyframe.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.Keyframe">
            <summary>
            Base class for all keyframe classes. A keyframe
            class describes fixed value for a property in 
            specific time.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Keyframe.Time">
            <summary>
            Define exact time since start of a scene, when a
            property should be set to a fixed value.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Keyframe.PropertyRef">
            <summary>
            Reference to a property, relative to object owning this animator.
            Subsequent elements must be separated by dots. You may call elements
            from collections as well, as long as they have their Name property
            set and it is unique in this collection.
            </summary>
            <example>
            <code>PropertyRef="MyRectangle.Pen.Color"</code>
            </example>
        </member>
        <member name="T:Animator.Engine.Elements.Label">
            <summary>
            Draws a text on a scene.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Label.Brush">
            <summary>
            Defines fill of drawn text.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Label.Text">
            <summary>
            Text to be drawn.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Label.FontFamily">
            <summary>
            Defines font family to be used while drawing text.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Label.FontSize">
            <summary>
            Defines font size of the drawn text.
            </summary>
            <remarks>
            Use SizeUnit property to define unit (pixels or points)
            </remarks>
        </member>
        <member name="P:Animator.Engine.Elements.Label.Bold">
            <summary>
            Set this property to true to make text bold.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Label.Italic">
            <summary>
            Set this property to true to make text italic.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Label.Underline">
            <summary>
            Set this property to true to make text underlined.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Label.SizeUnit">
            <summary>
            Defines unit in which size of font is expressed.
            Possible values:
            <ul>
              <li>Points</li>
              <li>Pixels</li>
            </ul>
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.Layer">
            <summary>
            Allows grouping visuals. You can use it to apply
            transforms or effects to whole group of elements, or
            add a common effect to all of them at once.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Layer.Items">
            <summary>
            Elements on a layer.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.Line">
            <summary>
            Draws a line on the scene.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Line.Start">
            <summary>
            Point defining start of the line.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Line.End">
            <summary>
            Point defining end of the line.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Line.Pen">
            <summary>
            Describes visual properties of the drawn line.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.LinearGradientBrush">
            <summary>
            Brush, which fills shape with a linear gradient.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.LinearGradientBrush.Point1">
            <summary>
            Start point of the gradient
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.LinearGradientBrush.Point2">
            <summary>
            End point of the gradient
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.LinearGradientBrush.Color1">
            <summary>
            Start color of the gradient
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.LinearGradientBrush.Color2">
            <summary>
            End color of the gradient
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.LinearGradientBrush.Stops">
            <summary>
            Defines additional stops for the gradient. Note, that if you
            use Steps, values of Color1 and Color2 are ignored.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.LinearGradientStop">
            <summary>
            Defines a stop in complex linear gradient.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.LinearGradientStop.Position">
            <summary>
            Position of the stop. 0.0f equals to start point, 1.0f - to end point.
            Values outside this range are allowed to define gradient on the outside
            as well.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.LinearGradientStop.Color">
            <summary>
            Color of this gradient stop.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.Movie">
            <summary>
            Root element of the movie.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Movie.Config">
            <summary>
            Contains configuration of the movie.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Movie.Scenes">
            <summary>
            Contains scenes of the movie.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.MovieConfig">
            <summary>
            Describes animation parameters.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.MovieConfig.Width">
            <summary>
            Width of the result animation, in pixels.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.MovieConfig.Height">
            <summary>
            Height of the result animation, in pixels.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.MovieConfig.FramesPerSecond">
            <summary>
            Defines, how many frames should be in a second of animation.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.MultipleCubicBezierBasedPathElement">
            <summary>
            Base class for all path elements, which are interpolated
            by a series of cubic Bezier curves
            </summary>
        </member>
        <member name="M:Animator.Engine.Elements.MultipleCubicBezierBasedPathElement.BuildBeziers(System.Drawing.PointF)">
            <summary>
            Builds cubic Bezier curve equivalent for current path fragment.
            </summary>
        </member>
        <member name="M:Animator.Engine.Elements.MultipleCubicBezierBasedPathElement.GetBeziers(System.Drawing.PointF)">
            <summary>
            Gets cubic Bezier curve equivalent for current path fragment.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.NumericKeyframe">
            <summary>
            Base class for all keyframes, which define animation
            of a numeric properties (ie. of type int, float, PointF etc.)
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.NumericKeyframe.EasingFunction">
            <summary>
            Defines easing function used for animation. The role of
            easing function is to define, how value should change
            between previous and current keyframe. Possible
            easing functions include the following:
            
            <ul>
                <li>Linear</li>
                <li>SwitchOnStart</li>
                <li>SwitchInTheMiddle</li>
                <li>SwitchOnEnd</li>
                <li>SineSpeedUp</li>
                <li>SineSlowDown</li>
                <li>SineBoth</li>
                <li>QuadSpeedUp</li>
                <li>QuadSlowDown</li>
                <li>QuadBoth</li>
                <li>CubicSpeedUp</li>
                <li>CubicSlowDown</li>
                <li>CubicBoth</li>
                <li>QuartSpeedUp</li>
                <li>QuartSlowDown</li>
                <li>QuartBoth</li>
                <li>BackSpeedUp</li>
                <li>BackSlowDown</li>
                <li>BackBoth</li>
            </ul>
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.Path">
            <summary>
            Draws a path on a scene.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Path.Definition">
            <summary>
            List containing path elements, which define its shape.
            In XML, you may express value of this property in an
            attribute as SVG-compatible path description.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Path.CutFrom">
            <summary>
            If set, defines first split point of the path. The path
            before this value will not be drawn. CutFrom must fit
            between 0 and 1, inclusive.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Path.CutTo">
            <summary>
            If set, defines last split point of the path. The path
            after this value will not be drawn. CutTo must fit
            between 0 and 1, inclusive.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.PathElement">
            <summary>
            Base class for all path elements.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.PathElement.RunningPoint">
            <summary>
            Utility class to simplify handling relative positions
            </summary>
        </member>
        <member name="M:Animator.Engine.Elements.PathElement.F(System.Single)">
            <summary>
            Formats a float into a SVG path-compatible string.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.Pen">
            <summary>
            Defines a way in which lines are being drawn.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Pen.Color">
            <summary>
            Color of the line.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Pen.Width">
            <summary>
            Width of the line.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.PointKeyframe">
            <summary>
            A keyframe for a property of type PointF.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.PointKeyframe.Value">
            <summary>
            Value of the keyframe.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.QuadraticBezierPathElement">
            <summary>
            Base abstract class for all quadratic Bezier path elements.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.Rectangle">
            <summary>
            Draws rectangle on a scene.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Rectangle.Width">
            <summary>
            Width of the rectangle.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Rectangle.Height">
            <summary>
            Height of the rectangle.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.RelativeArcPathElement">
            <summary>
            Represents a path part, which is drawn as an elliptical arc.
            First point of the arc equals to the last point of previous
            path element.
            Endpoint of the arc is expressed in relative coordinates.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.RelativeArcPathElement.RX">
            <summary>
            X radius of the ellipse, from which the arc is built.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.RelativeArcPathElement.RY">
            <summary>
            Y radius of the ellipse, from which the arc is built.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.RelativeArcPathElement.Angle">
            <summary>
            Angle of the arc
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.RelativeArcPathElement.LargeArcFlag">
            <summary>
            Determines, whether arc should follow the larger path or smaller one.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.RelativeArcPathElement.SweepFlag">
            <summary>
            Determines, whether arc will be drawn positive-angle or negative-angle.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.RelativeArcPathElement.DeltaEndPoint">
            <summary>
            End point of the arc, relative to the endpoint of previous path element.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.RelativeCubicBezierPathElement">
            <summary>
            Represents a path part, which is drawn as a cubic Bezier curve.
            First point of the curve equals to the last point of previous
            path element.
            All points are expressed in relative coordinates.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.RelativeCubicBezierPathElement.DeltaControlPoint1">
            <summary>
            First control point, relative to endpoint of the previous
            path element.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.RelativeCubicBezierPathElement.DeltaControlPoint2">
            <summary>
            Second control point, relative to the first control
            point.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.RelativeCubicBezierPathElement.DeltaEndPoint">
            <summary>
            End point, relative to the second control point.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.RelativeCubicShorthandBezierPathElement">
            <summary>
            Represents a path part, which is drawn as a cubic Bezier curve.
            First point of the curve equals to the last point of previous
            path element. First control point is deduced from the previous
            path element as a mirror of its last control point against its
            endpoint.
            All points are expressed in relative coordinates.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.RelativeCubicShorthandBezierPathElement.DeltaControlPoint2">
            <summary>
            Second control point, relative to the deduced 
            first control point.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.RelativeCubicShorthandBezierPathElement.DeltaEndPoint">
            <summary>
            End point, relative to the second control point.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.RelativeHorizontalLinePathElement">
            <summary>
            Represents a path part, which is drawn as a horizontal line.
            All points are expressed in relative coordinates.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.RelativeHorizontalLinePathElement.DX">
            <summary>
            X-coordinate of the end point relative to X-coordinate of 
            end point of the previous path element. Y-coordinate equals
            to end point's of the previous path element.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.RelativeLinePathElement">
            <summary>
            Represents a path part, which is drawn as a line.
            All points are expressed in relative coordinates.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.RelativeLinePathElement.DeltaEndPoint">
            <summary>
            End point of the line, relative to end point
            of the previous path element.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.RelativeMovePathElement">
            <summary>
            Begins a new path in specified relative coordinates
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.RelativeMovePathElement.DeltaEndPoint">
            <summary>
            Coordinates at which new path should begin, relative
            to end point of the previous path element.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.RelativeQuadraticBezierPathElement">
            <summary>
            Represents a path part, which is drawn as a quadratic Bezier curve.
            First point of the curve equals to the last point of previous
            path element. 
            All points are expressed in relative coordinates.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.RelativeQuadraticBezierPathElement.DeltaControlPoint">
            <summary>
            Control point of the curve, relative to endpoint of the previous
            path element.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.RelativeQuadraticBezierPathElement.DeltaEndPoint">
            <summary>
            End point of the curve, relative to endpoint of the previous
            path element.
            </summary>
            <remarks>
            As an exception, coordinates of end point od the quadratic curve
            are expressed in relation to previous path element's end point
            and <strong>not</strong> to the control point. This is to conform
            to SVG's standard of defining paths.
            </remarks>
        </member>
        <member name="T:Animator.Engine.Elements.RelativeQuadraticShorthandBezierPathElement">
            <summary>
            Represents a path part, which is drawn as a quadratic Bezier curve.
            Start point of the curve equals to the last point of previous
            path element. The control point is deduced from the previous
            path element as a mirror of its last control point against its
            endpoint.
            End point is expressed in relative coordinates.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.RelativeQuadraticShorthandBezierPathElement.DeltaEndPoint">
            <summary>
            End point of the curve, relative to end point of the previous
            path element.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.RelativeVerticalLinePathElement">
            <summary>
            Represents a path part, which is drawn as a horizontal line.
            All points are expressed in relative coordinates.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.RelativeVerticalLinePathElement.DY">
            <summary>
            Y-coordinate of the end point relative to Y-coordinate of 
            end point of the previous path element. X-coordinate equals
            to end point's of the previous path element.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.Scene">
            <summary>
            Contains description of a single scene in animation.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Scene.Duration">
            <summary>
            Defines duration of the scene.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Scene.Items">
            <summary>
            Contains all visual elements placed on the scene.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Scene.Background">
            <summary>
            Defines fill of the background of the scene.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.SceneElement">
            <summary>
            Base class for all elements used to describe an
            animation.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.SceneElement.Name">
            <summary>
            Defines name of this object, which may be then used to
            reference it from various objects via their TargetName
            properties. This value should be unique among the whole
            scene, though this is not enforced. However, elements
            are reachable through TargetName properties only if
            their names are unique.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.SceneElement.Animations">
            <summary>
            Contains list of all animators, which animate properties
            of elements placed inside this element.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.Shape">
            <summary>
            Base class for all shapes drawn on the scene.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Shape.Brush">
            <summary>
            Defines, how shape will be filled.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Shape.Pen">
            <summary>
            Defines, how edges of the shape will be drawn.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.SolidBrush">
            <summary>
            Brush, which fills an area with a single color.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.SolidBrush.Color">
            <summary>
            Color of the fill.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.Storyboard">
            <summary>
            Allows defining complex animations consisting of
            multiple keyframes. Storyboard can contain definitions
            of multiple animations (eg. multiple properties). You can
            also use its properties, so that keyframes will inherit 
            them.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Storyboard.PropertyRef">
            <summary>
            Reference to a property, relative to object owning this animator.
            Subsequent elements must be separated by dots. You may call elements
            from collections as well, as long as they have their Name property
            set and it is unique in this collection.
            </summary>
            <example>
            <code>PropertyRef="MyRectangle.Pen.Color"</code>
            </example>
        </member>
        <member name="P:Animator.Engine.Elements.Storyboard.EasingFunction">
             <summary>
             Defines easing function used for animation. The role of
             easing function is to define, how value should change
             between previous and current keyframe. Possible
             easing functions include the following:
             
             <ul>
                 <li>Linear</li>
                 <li>SwitchOnStart</li>
                 <li>SwitchInTheMiddle</li>
                 <li>SwitchOnEnd</li>
                 <li>SineSpeedUp</li>
                 <li>SineSlowDown</li>
                 <li>SineBoth</li>
                 <li>QuadSpeedUp</li>
                 <li>QuadSlowDown</li>
                 <li>QuadBoth</li>
                 <li>CubicSpeedUp</li>
                 <li>CubicSlowDown</li>
                 <li>CubicBoth</li>
                 <li>QuartSpeedUp</li>
                 <li>QuartSlowDown</li>
                 <li>QuartBoth</li>
                 <li>BackSpeedUp</li>
                 <li>BackSlowDown</li>
                 <li>BackBoth</li>
             </ul>
            
             Storyboard does not use this value, but it may be set, so that
             keyframes will inherit it (for a shorthand notation).
             </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Storyboard.Keyframes">
            <summary>
            List of keyframes, which define complex animation.
            </summary>
        </member>
        <member name="T:Animator.Engine.Elements.Visual">
            <summary>
            Represents basic element, which can be drawn on the scene.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Visual.Visible">
            <summary>
            Defines, whether element is visible or not.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Visual.Position">
            <summary>
            Position of this visual on the scene.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Visual.Origin">
            <summary>
            An anchor point of this visual. It affects numerous transforms, 
            such as Position, Rotation and Scale. In general, it defines a
            point of the visual, which will be placed on the scene in place
            defined by Position property. Also, it defines center point
            for rotation and scaling.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Visual.Rotation">
            <summary>
            Rotates visual by specific angle.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Visual.Scale">
            <summary>
            Scales the visual by specified factor (separately
            in X and Y axis).
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Visual.Alpha">
            <summary>
            Applies transparency to a visual.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Visual.Effects">
            <summary>
            List of effects, which will be applied to
            a visual after rendering.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Visual.InvertMask">
            <summary>
            Defines, if mask expresses areas, which should or should not
            be drawn. Useful, if you want to e.g. draw everything
            <em>except</em> some specific area.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Visual.MaskCoordinateSystem">
            <summary>
            Defines, in which coordinates the Visual's mask is defined. If you set this property to Local,
            mask will follow all transforms applied to the Visual. If you set to Global, it will be immune
            to those transforms.
            </summary>
        </member>
        <member name="P:Animator.Engine.Elements.Visual.Mask">
            <summary>
            Allows masking a visual, e.g. drawing only parts of it on
            a screen. Use other visuals to describe the mask, although
            only alpha-value of the final mask is used (colors does
            not matter). If mask is not inverted (InvertMask property),
            areas of the visual, where its mask has value of 1 are drawn
            completely and areas, where the mask has value of 0 are not
            drawn at all (with all values in between allowing partial 
            drawing). If mask is inverted, this behavior works the other
            way around.
            </summary>
        </member>
        <member name="F:Animator.Engine.Utils.Bezier.LENGTH_ESTIMATION_ACCURACY">
            <summary>
            Defines a threshold for Bezier curve length estimation. If a new
            estimation differs by previous less than this value, algorithm
            stops.
            </summary>
        </member>
        <member name="M:Animator.Engine.Utils.Bezier.GetPointOn(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single)">
            <summary>
            Gets position of a point on a cubic Bezier curve
            </summary>
            <param name="P1">First point</param>
            <param name="C1">First control point</param>
            <param name="C2">Second control point</param>
            <param name="P2">Second point</param>
            <param name="t">Position on curve, 0 &lt;= t &lt;= 1</param>
            <returns>Point on a curve</returns>
        </member>
        <member name="M:Animator.Engine.Utils.Bezier.SplitBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single)">
            <summary>
            Splits Bezier curve into two parts at given point
            </summary>
            <param name="P1">First point</param>
            <param name="C1">First control point</param>
            <param name="C2">Second control point</param>
            <param name="P2">Second point</param>
            <param name="t">Position on curve, 0 &lt;= t &lt;= 1</param>
            <returns>Two sets of four control points</returns>
        </member>
        <member name="M:Animator.Engine.Utils.Bezier.Split(System.Drawing.PointF[],System.Single)">
            <summary>
            Splits Bezier curve into two parts at given point
            </summary>
            <param name="bezier">Array consisting of exactly four points</param>
            <param name="t">Position on curve, 0 &lt;= t &lt;= 1</param>
            <returns>Two sets of four control points</returns>
        </member>
        <member name="M:Animator.Engine.Utils.Bezier.EstimateLength(System.Drawing.PointF[])">
            <summary>
            Estimates Bezier curve length by subdividing it into smaller segments.
            </summary>
            <param name="bezier">Cubic Bezier path points</param>
            <returns>Estimated length and equally divided segments, which were used to evaluate it.</returns>
        </member>
    </members>
</doc>
