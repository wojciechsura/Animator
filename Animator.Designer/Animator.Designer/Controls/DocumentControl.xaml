<UserControl x:Class="Animator.Designer.Controls.DocumentControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Animator.Designer.Controls" 
             xmlns:vm="clr-namespace:Animator.Designer.BusinessLogic.ViewModels.Main;assembly=Animator.Designer.BusinessLogic" 
             xmlns:vmw="clr-namespace:Animator.Designer.BusinessLogic.ViewModels.Wrappers.Objects;assembly=Animator.Designer.BusinessLogic" 
             xmlns:vmp="clr-namespace:Animator.Designer.BusinessLogic.ViewModels.Wrappers.Properties;assembly=Animator.Designer.BusinessLogic"
             xmlns:vmv="clr-namespace:Animator.Designer.BusinessLogic.ViewModels.Wrappers.Values;assembly=Animator.Designer.BusinessLogic"
             xmlns:res="clr-namespace:Animator.Designer.Resources.Controls.DocumentControl;assembly=Animator.Designer.Resources" 
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             DataContextChanged="HandleDataContextChanged"
             d:DataContext="{d:DesignInstance Type=vm:DocumentViewModel}"             
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Thickness x:Key="TreeItemMargin">2</Thickness>
        
        <!--#region Styles-->

        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="2" />
        </Style>
        
        <Style x:Key="ClassNameText" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Foreground" Value="#000000" />
                <Setter Property="FontSize" Value="12" />
            </Style.Setters>
        </Style>

        <Style x:Key="EngineText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#000000" />
            <Setter Property="FontSize" Value="12" />
        </Style>

        <Style x:Key="NameText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#808080" />
            <Setter Property="FontSize" Value="12" />
        </Style>

        <Style x:Key="ValueText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#55aaff" />
            <Setter Property="FontSize" Value="12" />
        </Style>

        <Style x:Key="KeyText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#0000ff" />
            <Setter Property="FontSize" Value="12" />
        </Style>

        <Style x:Key="SourceText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#00a040" />
            <Setter Property="FontSize" Value="12" />
        </Style>

        <Style x:Key="PropertiesText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#808080" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontStyle" Value="Italic" />
        </Style>

        <Style x:Key="PropertyText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#000000" />
            <Setter Property="FontSize" Value="12" />
        </Style>

        <!--#endregion-->
        
        <!--#region Resources-->
        
        <Thickness x:Key="IconMargin" Left="2" Top="2" Right="4" Bottom="2" />

        <sys:Double x:Key="PropertyRowMinHeight">28.0</sys:Double>
        
        <SolidColorBrush x:Key="StringBackground" Color="#40ffffff" />

        <SolidColorBrush x:Key="DefaultBackground" Color="#40808080" />

        <SolidColorBrush x:Key="MarkupExtensionBackground" Color="#40ff8080" />

        <SolidColorBrush x:Key="CollectionBackground" Color="#4000ff40" />

        <SolidColorBrush x:Key="ReferenceBackground" Color="#400040ff" />

        <!--#endregion-->
        
        <!--#region Templates for Properties data grid-->
        
        <DataTemplate x:Key="StringPropertyTemplate" DataType="{x:Type vmp:StringPropertyViewModel}">
            <DockPanel Background="{StaticResource StringBackground}">
                <TextBox Margin="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" />
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="MultilineStringPropertyTemplate" DataType="{x:Type vmp:StringPropertyViewModel}">
            <DockPanel Background="{StaticResource StringBackground}">
                <TextBox Margin="3" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" 
                         MinLines="5" AcceptsReturn="True" AcceptsTab="True" HorizontalAlignment="Stretch" />
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="ManagedSimplePropertyTemplate" DataType="{x:Type vmp:ManagedSimplePropertyViewModel}">
            <DockPanel>
                <local:PropertyPopup DockPanel.Dock="Right" Margin="3" />
                
                <ContentControl Content="{Binding Value}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type vmv:StringValueViewModel}">
                            <Grid Background="{StaticResource StringBackground}" MinHeight="{StaticResource PropertyRowMinHeight}">
                                <TextBox Margin="3" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding AvailableOptions, Converter={StaticResource InverseNullToVisibilityConverter}}" 
                                         HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                <ComboBox Margin="3" SelectedValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding AvailableOptions}" Visibility="{Binding AvailableOptions, Converter={StaticResource NullToVisibilityConverter}}"
                                          IsEditable="False" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                            </Grid>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type vmv:DefaultValueViewModel}">
                            <DockPanel Background="{StaticResource DefaultBackground}" MinHeight="{StaticResource PropertyRowMinHeight}">
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="PreviewMouseDown">
                                        <b:InvokeCommandAction Command="{Binding SwitchToStringIfPossibleCommand}" />
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                                <TextBlock Margin="3" Text="{Binding Value}" VerticalAlignment="Center" />
                            </DockPanel>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type vmv:MarkupExtensionValueViewModel}">
                            <DockPanel Background="{StaticResource MarkupExtensionBackground}" MinHeight="{StaticResource PropertyRowMinHeight}">
                                <TextBlock Margin="3" Text="{Binding Name}" VerticalAlignment="Center" />
                            </DockPanel>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="ManagedCollectionPropertyTemplate" DataType="{x:Type vmp:ManagedCollectionPropertyViewModel}">
            <DockPanel>
                <local:PropertyPopup DockPanel.Dock="Right" Margin="3" />

                <ContentControl Content="{Binding Value}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type vmv:StringValueViewModel}">
                            <DockPanel Background="{StaticResource StringBackground}" MinHeight="{StaticResource PropertyRowMinHeight}">
                                <TextBox Margin="3" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         VerticalAlignment="Center" />
                            </DockPanel>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type vmv:CollectionValueViewModel}">
                            <DockPanel Background="{StaticResource CollectionBackground}" MinHeight="{StaticResource PropertyRowMinHeight}">
                                <TextBlock Margin="3" Text="(Collection)" VerticalAlignment="Center" />
                            </DockPanel>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type vmv:MarkupExtensionValueViewModel}">
                            <DockPanel Background="{StaticResource MarkupExtensionBackground}" MinHeight="{StaticResource PropertyRowMinHeight}">
                                <TextBlock Margin="3" Text="{Binding Name}" VerticalAlignment="Center" />
                            </DockPanel>
                        </DataTemplate>

                    </ContentControl.Resources>
                </ContentControl>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="ManagedReferencePropertyTemplate" DataType="{x:Type vmp:ManagedReferencePropertyViewModel}">
            <DockPanel>
                <local:PropertyPopup DockPanel.Dock="Right" Margin="3" />

                <ContentControl Content="{Binding Value}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type vmv:StringValueViewModel}">
                            <DockPanel Background="{StaticResource StringBackground}" MinHeight="{StaticResource PropertyRowMinHeight}">
                                <TextBox Margin="3" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         VerticalAlignment="Center" />
                            </DockPanel>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type vmv:ReferenceValueViewModel}">
                            <DockPanel Background="{StaticResource ReferenceBackground}" MinHeight="{StaticResource PropertyRowMinHeight}">
                                <TextBlock Margin="3" Text="(Object)" VerticalAlignment="Center" />
                            </DockPanel>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type vmv:MarkupExtensionValueViewModel}">
                            <DockPanel Background="{StaticResource MarkupExtensionBackground}" MinHeight="{StaticResource PropertyRowMinHeight}">
                                <TextBlock Margin="3" Text="{Binding Name}" VerticalAlignment="Center" />
                            </DockPanel>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type vmv:DefaultValueViewModel}">
                            <DockPanel Background="{StaticResource DefaultBackground}" MinHeight="{StaticResource PropertyRowMinHeight}">
                                <TextBlock Margin="3" Text="(Empty object)" VerticalAlignment="Center" />
                            </DockPanel>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="ReferencePropertyTemplate" DataType="{x:Type vmp:ReferencePropertyViewModel}">
            <DockPanel>
                <local:PropertyPopup DockPanel.Dock="Right" Margin="3" />

                <ContentControl Content="{Binding Value}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type vmv:ReferenceValueViewModel}">
                            <DockPanel Background="{StaticResource ReferenceBackground}" MinHeight="{StaticResource PropertyRowMinHeight}">
                                <TextBlock Margin="3" Text="(Object)" VerticalAlignment="Center" />
                            </DockPanel>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type vmv:DefaultValueViewModel}">
                            <DockPanel Background="{StaticResource DefaultBackground}" MinHeight="{StaticResource PropertyRowMinHeight}">
                                <TextBlock Margin="3" Text="(Empty object)" VerticalAlignment="Center" />
                            </DockPanel>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="MacroCollectionPropertyTemplate" DataType="{x:Type vmp:MacroCollectionPropertyViewModel}">
            <DockPanel>
                <local:PropertyPopup DockPanel.Dock="Right" Margin="3" />

                <ContentControl Content="{Binding Value}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type vmv:CollectionValueViewModel}">
                            <DockPanel Background="{StaticResource CollectionBackground}" MinHeight="{StaticResource PropertyRowMinHeight}">
                                <TextBlock Margin="3" Text="(Collection)" VerticalAlignment="Center" />
                            </DockPanel>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="ClearableStringPropertyTemplate" DataType="{x:Type vmp:ClearableStringPropertyViewModel}">
            <DockPanel>
                <local:PropertyPopup DockPanel.Dock="Right" Margin="3" />

                <ContentControl Content="{Binding Value}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type vmv:StringValueViewModel}">
                            <Grid Background="{StaticResource StringBackground}" MinHeight="{StaticResource PropertyRowMinHeight}">
                                <TextBox Margin="3" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding AvailableOptions, Converter={StaticResource InverseNullToVisibilityConverter}}" 
                                         HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                <ComboBox Margin="3" SelectedValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding AvailableOptions}" Visibility="{Binding AvailableOptions, Converter={StaticResource NullToVisibilityConverter}}"
                                          IsEditable="False" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                            </Grid>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type vmv:DefaultValueViewModel}">
                            <DockPanel Background="{StaticResource DefaultBackground}" MinHeight="{StaticResource PropertyRowMinHeight}">
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="PreviewMouseDown">
                                        <b:InvokeCommandAction Command="{Binding SwitchToStringIfPossibleCommand}" />
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                                <TextBlock Margin="3" Text="{Binding Value}" VerticalAlignment="Center" />
                            </DockPanel>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </DockPanel>
        </DataTemplate>
        
        <local:PropertyEditorTemplateSelector x:Key="PropertyEditorTemplateSelector" 
                                              StringPropertyTemplate="{StaticResource StringPropertyTemplate}" 
                                              MultilineStringPropertyTemplate="{StaticResource MultilineStringPropertyTemplate}"
                                              ManagedSimplePropertyTemplate="{StaticResource ManagedSimplePropertyTemplate}" 
                                              ManagedCollectionPropertyTemplate="{StaticResource ManagedCollectionPropertyTemplate}" 
                                              ManagedReferencePropertyTemplate="{StaticResource ManagedReferencePropertyTemplate}" 
                                              ReferencePropertyTemplate="{StaticResource ReferencePropertyTemplate}"
                                              MacroCollectionPropertyTemplate="{StaticResource MacroCollectionPropertyTemplate}" 
                                              ClearableStringPropertyTemplate="{StaticResource ClearableStringPropertyTemplate}"/>

        <!--#endregion-->
        
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="300" />
        </Grid.ColumnDefinitions>

        <!-- Properties table -->
        
        <GroupBox Header="Properties" Grid.Column="0">

            <DockPanel>

                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                    <Button Margin="{StaticResource DialogItemsMargin}" Command="{Binding EditMacroProperties}" Content="{x:Static res:Strings.EditProperties}" />
                </StackPanel>
                
                <DataGrid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding SelectedElement.Properties}"
                          AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="True" GridLinesVisibility="None" 
                          CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" 
                          HorizontalScrollBarVisibility="Disabled" SelectionMode="Single" HeadersVisibility="Column">
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                                        <Border Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True"
                                                TextBlock.Foreground="{x:Static SystemColors.ControlTextBrush}">
                                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="TextBlock.Foreground" Value="{x:Static SystemColors.ControlTextBrush}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Name">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type vmp:PropertyViewModel}">
                                    <TextBlock Margin="3" Text="{Binding Name}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Value" Width="1*" CellTemplateSelector="{StaticResource PropertyEditorTemplateSelector}" />
                    </DataGrid.Columns>
                </DataGrid>

            </DockPanel>
        </GroupBox>
        
        <!-- Splitter -->
        
        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

        <!-- Frame preview -->

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                <Grid.Background>
                    <DrawingBrush Stretch="None" TileMode="Tile" Viewport="0,0,16,16" ViewportUnits="Absolute">

                        <!-- a drawing of 4 checkerboard tiles -->
                        <DrawingBrush.Drawing>
                            <DrawingGroup>

                                <!-- checkerboard background -->
                                <GeometryDrawing Brush="#e0e0e0">
                                    <GeometryDrawing.Geometry>
                                        <RectangleGeometry Rect="0,0,16,16" />
                                    </GeometryDrawing.Geometry>
                                </GeometryDrawing>

                                <!-- two checkerboard foreground tiles -->
                                <GeometryDrawing Brush="#f0f0f0">
                                    <GeometryDrawing.Geometry>
                                        <GeometryGroup>
                                            <RectangleGeometry Rect="0,0,8,8" />
                                            <RectangleGeometry Rect="8,8,8,8" />
                                        </GeometryGroup>
                                    </GeometryDrawing.Geometry>
                                </GeometryDrawing>

                            </DrawingGroup>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Grid.Background>

                <Image Source="{Binding Frame}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" StretchDirection="DownOnly"/>

                <TextBox HorizontalAlignment="Stretch" VerticalContentAlignment="Top" Background="#a0ffffff" Visibility="{Binding ShowError, Converter={StaticResource BoolToVisibilityConverter}}"
                       VerticalAlignment="Stretch" Margin="0" Text="{Binding Error, Mode=OneWay}" IsReadOnly="True" Foreground="#ff0060" FontFamily="Consolas"/>
            </Grid>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Label Grid.Row="0" Grid.Column="0" Content="{Binding FrameIndex}"/>

                <Slider Grid.Row="0" Grid.Column="1" Minimum="{Binding MinFrame}" Maximum="{Binding MaxFrame}" Value="{Binding FrameIndex, Mode=TwoWay, Delay=100}" 
                        Margin="{StaticResource DefaultMargin}" SmallChange="1" TickPlacement="BottomRight" TickFrequency="10" LargeChange="10"/>

                <Label Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Content="{Binding RenderingStatus}" Margin="{StaticResource DefaultMargin}" />
            </Grid>
        </Grid>


        <!-- Splitter -->
        
        <GridSplitter Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

        <!-- Hierarchy tree -->
        
        <GroupBox Header="Hierarchy" Grid.Column="4">
            <TreeView ItemsSource="{Binding DisplayItems}" SelectedItemChanged="TreeView_SelectedItemChanged"
                      PreviewMouseDown="TreeView_PreviewMouseDown">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        <Style.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{x:Static SystemColors.HighlightColor}" />
                        </Style.Resources>
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    </Style>
                </TreeView.ItemContainerStyle>
                
                <TreeView.Resources>

                    <!-- Managed object -->
                    
                    <HierarchicalDataTemplate DataType="{x:Type vmw:ManagedObjectViewModel}" ItemsSource="{Binding DisplayChildren}">
                        <Grid Margin="{StaticResource TreeItemMargin}">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Name}" IsEnabled="False">
                                            <MenuItem.Template>
                                                <ControlTemplate TargetType="MenuItem">
                                                    <Label FontWeight="Bold" HorizontalAlignment="Center" Content="{TemplateBinding Header}" />
                                                </ControlTemplate>
                                            </MenuItem.Template>
                                        </MenuItem>
                                        
                                        <MenuItem Visibility="{Binding SetToInstanceCommand, Converter={StaticResource NullToVisibilityConverter}}"
                                                Header="{x:Static res:Strings.SetContentInstance}" ItemsSource="{Binding AvailableTypes}">
                                            <MenuItem.ItemContainerStyle>
                                                <Style TargetType="{x:Type MenuItem}">
                                                    <Setter Property="Header" Value="{Binding Name}" />
                                                    <Setter Property="Command" Value="{Binding Command}" />
                                                    <Setter Property="CommandParameter" Value="{Binding Type}" />
                                                </Style>
                                            </MenuItem.ItemContainerStyle>
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Images/Icons/SetInstance16.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>

                                        <MenuItem Visibility="{Binding AddInstanceCommand, Converter={StaticResource NullToVisibilityConverter}}"
                                                Header="{x:Static res:Strings.AddInstanceToContent}" ItemsSource="{Binding AvailableTypes}">
                                            <MenuItem.ItemContainerStyle>
                                                <Style TargetType="{x:Type MenuItem}">
                                                    <Setter Property="Header" Value="{Binding Name}" />
                                                    <Setter Property="Command" Value="{Binding Command}" />
                                                    <Setter Property="CommandParameter" Value="{Binding Type}" />
                                                </Style>
                                            </MenuItem.ItemContainerStyle>
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Images/Icons/AddInstance16.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>

                                        <MenuItem Visibility="{Binding InsertMacroCommand, Converter={StaticResource NullToVisibilityConverter}}"
                                                    Header="{x:Static res:Strings.InsertMacro}"
                                                    Command="{Binding InsertMacroCommand}">
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Images/Icons/PlaceMacro16.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>

                                        <MenuItem Visibility="{Binding InsertIncludeCommand, Converter={StaticResource NullToVisibilityConverter}}"
                                                    Header="{x:Static res:Strings.InsertInclude}"
                                                    Command="{Binding InsertIncludeCommand}">
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Images/Icons/Include16.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>

                                        <MenuItem Visibility="{Binding InsertGeneratorCommand, Converter={StaticResource NullToVisibilityConverter}}"
                                                    Header="{x:Static res:Strings.InsertGenerator}"
                                                    Command="{Binding InsertGeneratorCommand}">
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Images/Icons/Generator16.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        
                                        <MenuItem Visibility="{Binding SetToMarkupExtensionCommand, Converter={StaticResource NullToVisibilityConverter}}"
                                                    Header="{x:Static res:Strings.SetToMarkupExtension}" ItemsSource="{Binding AvailableMarkupExtensions}">
                                            <MenuItem.ItemContainerStyle>
                                                <Style TargetType="{x:Type MenuItem}">
                                                    <Setter Property="Header" Value="{Binding Name}" />
                                                    <Setter Property="Command" Value="{Binding Command}" />
                                                    <Setter Property="CommandParameter" Value="{Binding Type}" />
                                                </Style>
                                            </MenuItem.ItemContainerStyle>
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Images/Icons/MarkupExtension16.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>

                                        <Separator />

                                        <MenuItem Header="{x:Static res:Strings.Delete}" Command="{Binding DeleteCommand}" Visibility="{Binding DeleteCommand, Converter={StaticResource NullToVisibilityConverter}}">
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Images/Icons/Delete16.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>

                                        <MenuItem Header="{x:Static res:Strings.MoveUp}" Command="{Binding MoveUpCommand}" Visibility="{Binding CanMoveUp, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Images/Icons/Up16.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>

                                        <MenuItem Header="{x:Static res:Strings.MoveDown}" Command="{Binding MoveDownCommand}" Visibility="{Binding CanMoveDown, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Images/Icons/Down16.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>

                                <Image Margin="{StaticResource IconMargin}" Width="16" Height="16" Source="{Binding Icon, Converter={StaticResource ImageKeyConverter}}" />

                                <TextBlock Name="Class" Style="{StaticResource ClassNameText}" Text="{Binding Name}" />

                                <TextBlock Name="NameDash" Style="{StaticResource ClassNameText}" Text=" - " Visibility="{Binding DisplayName, Converter={StaticResource EmptyStringToVisibilityConverter}}" />
                                <TextBlock Name="Name" Style="{StaticResource NameText}" Text="{Binding DisplayName}" Visibility="{Binding DisplayName, Converter={StaticResource EmptyStringToVisibilityConverter}}" 
                                            Foreground="{Binding NameColor, Converter={StaticResource ColorCodeToBrushConverter}}" />

                                <TextBlock Name="ValueParen1" Style="{StaticResource ClassNameText}" Text=" (" Visibility="{Binding Value, Converter={StaticResource EmptyStringToVisibilityConverter}}" />
                                <TextBlock Name="Value" Style="{StaticResource ValueText}" Text="{Binding Value}" Visibility="{Binding Value, Converter={StaticResource EmptyStringToVisibilityConverter}}" />
                                <TextBlock Name="ValueParen2" Style="{StaticResource ClassNameText}" Text=")" Visibility="{Binding Value, Converter={StaticResource EmptyStringToVisibilityConverter}}" />
                            </StackPanel>
                        </Grid>

                        <HierarchicalDataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="Class" Property="Foreground" Value="#ffffff" />
                                <Setter TargetName="NameDash" Property="Foreground" Value="#ffffff" />
                                <Setter TargetName="Name" Property="Foreground" Value="#ffffff" />
                                <Setter TargetName="ValueParen1" Property="Foreground" Value="#ffffff" />
                                <Setter TargetName="Value" Property="Foreground" Value="#ffffff" />
                                <Setter TargetName="ValueParen2" Property="Foreground" Value="#ffffff" />
                            </DataTrigger>
                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>

                    <!-- Properties proxy -->
                    
                    <HierarchicalDataTemplate DataType="{x:Type vmw:PropertiesProxyViewModel}" ItemsSource="{Binding DisplayChildren}">
                        <StackPanel Orientation="Horizontal" Margin="{StaticResource TreeItemMargin}">
                            <Image Margin="{StaticResource IconMargin}" Width="16" Height="16" Source="{Binding Icon, Converter={StaticResource ImageKeyConverter}}" />

                            <TextBlock Name="Properties" Style="{StaticResource PropertiesText}" Text="{x:Static res:Strings.Properties}" />
                        </StackPanel>
                        <HierarchicalDataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="Properties" Property="Foreground" Value="#ffffff" />
                            </DataTrigger>
                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>

                    <!-- Property proxy -->
                            
                    <HierarchicalDataTemplate DataType="{x:Type vmw:PropertyProxyViewModel}" ItemsSource="{Binding DisplayChildren}">
                        <StackPanel Orientation="Horizontal" Margin="{StaticResource TreeItemMargin}">
                            <StackPanel.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Visibility="{Binding SetToInstanceCommand, Converter={StaticResource NullToVisibilityConverter}}"
                                              Header="{x:Static res:Strings.SetToInstance}" ItemsSource="{Binding AvailableTypes}">
                                        <MenuItem.ItemContainerStyle>
                                            <Style TargetType="{x:Type MenuItem}">
                                                <Setter Property="Header" Value="{Binding Name}" />
                                                <Setter Property="Command" Value="{Binding Command}" />
                                                <Setter Property="CommandParameter" Value="{Binding Type}" />
                                            </Style>
                                        </MenuItem.ItemContainerStyle>
                                        <MenuItem.Icon>
                                            <Image Source="/Resources/Images/Icons/SetInstance16.png" />
                                        </MenuItem.Icon>
                                    </MenuItem>

                                    <MenuItem Visibility="{Binding AddInstanceCommand, Converter={StaticResource NullToVisibilityConverter}}"
                                              Header="{x:Static res:Strings.AddInstance}" ItemsSource="{Binding AvailableTypes}">
                                        <MenuItem.ItemContainerStyle>
                                            <Style TargetType="{x:Type MenuItem}">
                                                <Setter Property="Header" Value="{Binding Name}" />
                                                <Setter Property="Command" Value="{Binding Command}" />
                                                <Setter Property="CommandParameter" Value="{Binding Type}" />
                                            </Style>
                                        </MenuItem.ItemContainerStyle>
                                        <MenuItem.Icon>
                                            <Image Source="/Resources/Images/Icons/AddInstance16.png" />
                                        </MenuItem.Icon>
                                    </MenuItem>

                                    <MenuItem Visibility="{Binding InsertMacroCommand, Converter={StaticResource NullToVisibilityConverter}}"
                                                  Header="{x:Static res:Strings.InsertMacro}"
                                                  Command="{Binding InsertMacroCommand}">
                                        <MenuItem.Icon>
                                            <Image Source="/Resources/Images/Icons/PlaceMacro16.png" />
                                        </MenuItem.Icon>
                                    </MenuItem>

                                    <MenuItem Visibility="{Binding SetToMarkupExtensionCommand, Converter={StaticResource NullToVisibilityConverter}}"
                                                  Header="{x:Static res:Strings.SetToMarkupExtension}" ItemsSource="{Binding AvailableMarkupExtensions}">
                                        <MenuItem.ItemContainerStyle>
                                            <Style TargetType="{x:Type MenuItem}">
                                                <Setter Property="Header" Value="{Binding Name}" />
                                                <Setter Property="Command" Value="{Binding Command}" />
                                                <Setter Property="CommandParameter" Value="{Binding Type}" />
                                            </Style>
                                        </MenuItem.ItemContainerStyle>
                                        <MenuItem.Icon>
                                            <Image Source="/Resources/Images/Icons/MarkupExtension16.png" />
                                        </MenuItem.Icon>
                                    </MenuItem>

                                </ContextMenu>
                            </StackPanel.ContextMenu>
                            <Image Margin="{StaticResource IconMargin}" Width="16" Height="16" Source="{Binding Icon, Converter={StaticResource ImageKeyConverter}}" />

                            <TextBlock Name="Property" Style="{StaticResource PropertyText}" Text="{Binding Name}" />
                        </StackPanel>
                        <HierarchicalDataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="Property" Property="Foreground" Value="#ffffff" />
                            </DataTrigger>
                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>

                    <!-- Macro definitions -->

                    <HierarchicalDataTemplate DataType="{x:Type vmw:MacrosProxyViewModel}" ItemsSource="{Binding DisplayChildren}">
                        <StackPanel Orientation="Horizontal" Margin="{StaticResource TreeItemMargin}">
                            <StackPanel.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="{x:Static res:Strings.AddMacroDefinition}" Command="{Binding AddMacroDefinitionCommand}" />
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                            <Image Margin="{StaticResource IconMargin}" Width="16" Height="16" Source="{Binding Icon, Converter={StaticResource ImageKeyConverter}}" />
                            <TextBlock Name="Name" Style="{StaticResource PropertyText}" Text="Macros" />
                        </StackPanel>

                        <HierarchicalDataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="Name" Property="Foreground" Value="#ffffff" />
                            </DataTrigger>
                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>
                    
                    <!-- Macro definition -->

                    <HierarchicalDataTemplate DataType="{x:Type vmw:MacroDefinitionViewModel}" ItemsSource="{Binding DisplayChildren}">
                        <StackPanel Orientation="Horizontal" Margin="{StaticResource TreeItemMargin}">
                            <StackPanel.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Visibility="{Binding DeleteCommand, Converter={StaticResource NullToVisibilityConverter}}"
                                                      Header="{x:Static res:Strings.Delete}" Command="{Binding DeleteCommand}">
                                        <MenuItem.Icon>
                                            <Image Source="/Resources/Images/Icons/Delete16.png" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                            <Image Margin="{StaticResource IconMargin}" Width="16" Height="16" Source="{Binding Icon, Converter={StaticResource ImageKeyConverter}}" />

                            <TextBlock Name="Name" Style="{StaticResource EngineText}" Text="Macro definition" />
                            <TextBlock Name="NameDash" Style="{StaticResource EngineText}" Text=" - " />
                            <TextBlock Name="Key" Style="{StaticResource KeyText}" Text="{Binding Key}" />
                        </StackPanel>

                        <HierarchicalDataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="Key" Property="Foreground" Value="#ffffff" />
                                <Setter TargetName="Name" Property="Foreground" Value="#ffffff" />
                                <Setter TargetName="NameDash" Property="Foreground" Value="#ffffff" />
                            </DataTrigger>
                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>

                    <!-- Markup extension -->

                    <HierarchicalDataTemplate DataType="{x:Type vmw:MarkupExtensionViewModel}" ItemsSource="{Binding DisplayChildren}">
                        <Grid Margin="{StaticResource TreeItemMargin}">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{x:Static res:Strings.Delete}" Command="{Binding DeleteCommand}">
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Images/Icons/Delete16.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <Image Margin="{StaticResource IconMargin}" Width="16" Height="16" Source="{Binding Icon, Converter={StaticResource ImageKeyConverter}}" />

                                <TextBlock Name="Name" Style="{StaticResource NameText}" Text="{Binding Name}" />
                            </StackPanel>
                        </Grid>

                        <HierarchicalDataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="Name" Property="Foreground" Value="#ffffff" />
                            </DataTrigger>
                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>

                    <!-- Include -->
                            
                    <HierarchicalDataTemplate DataType="{x:Type vmw:IncludeViewModel}" ItemsSource="{Binding DisplayChildren}">
                        <Grid Margin="{StaticResource TreeItemMargin}">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{x:Static res:Strings.Delete}" Command="{Binding DeleteCommand}">
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Images/Icons/Delete16.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <Image Margin="{StaticResource IconMargin}" Width="16" Height="16" Source="{Binding Icon, Converter={StaticResource ImageKeyConverter}}" />

                                <TextBlock Name="Name" Style="{StaticResource EngineText}" Text="Include" />
                                <TextBlock Text=" " />
                                <TextBlock Name="Source" Style="{StaticResource SourceText}" Text="{Binding Source}" />
                            </StackPanel>
                        </Grid>

                        <HierarchicalDataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="Source" Property="Foreground" Value="#ffffff" />
                                <Setter TargetName="Name" Property="Foreground" Value="#ffffff" />
                            </DataTrigger>
                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>

                    <!-- Macro -->

                    <HierarchicalDataTemplate DataType="{x:Type vmw:MacroViewModel}" ItemsSource="{Binding DisplayChildren}">
                        <Grid Margin="{StaticResource TreeItemMargin}">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{x:Static res:Strings.Delete}" Command="{Binding DeleteCommand}">
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Images/Icons/Delete16.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <Image Margin="{StaticResource IconMargin}" Width="16" Height="16" Source="{Binding Icon, Converter={StaticResource ImageKeyConverter}}" />
                                
                                <TextBlock Name="Name" Style="{StaticResource EngineText}" Text="Place macro" />
                                <TextBlock Name="NameDash" Style="{StaticResource EngineText}" Text=" - " />
                                <TextBlock Name="Key" Style="{StaticResource KeyText}" Text="{Binding Key}" />
                            </StackPanel>
                        </Grid>

                        <HierarchicalDataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="Key" Property="Foreground" Value="#ffffff" />
                                <Setter TargetName="Name" Property="Foreground" Value="#ffffff" />
                            </DataTrigger>
                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>

                    <!-- Generate -->
                            
                    <HierarchicalDataTemplate DataType="{x:Type vmw:GenerateViewModel}" ItemsSource="{Binding DisplayChildren}">
                        <StackPanel Orientation="Horizontal" Margin="{StaticResource TreeItemMargin}">
                            <StackPanel.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="{x:Static res:Strings.Delete}" Command="{Binding DeleteCommand}">
                                        <MenuItem.Icon>
                                            <Image Source="/Resources/Images/Icons/Delete16.png" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                            <Image Margin="{StaticResource IconMargin}" Width="16" Height="16" Source="{Binding Icon, Converter={StaticResource ImageKeyConverter}}" />

                            <TextBlock Name="Name" Style="{StaticResource EngineText}" Text="Generate" />
                        </StackPanel>

                        <HierarchicalDataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="Name" Property="Foreground" Value="#ffffff" />
                            </DataTrigger>
                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>

                </TreeView.Resources>
            </TreeView>
        </GroupBox>
    </Grid>
</UserControl>
